{"ast":null,"code":"var _jsxFileName = \"/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/MyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Chart, CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend);\nconst MyChart = ({\n  temperatureData,\n  humidityData,\n  breachAlertData,\n  fluidLevelData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  // Data format to use in the chart\n  const data = {\n    labels: ['Temperature', 'Humidity', 'Breach Alert', 'Fluid Level'],\n    datasets: [{\n      label: 'Sensor Data',\n      data: [temperatureData, humidityData, breachAlertData, fluidLevelData],\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],\n      borderWidth: 2,\n      borderRadius: 5,\n      hoverBackgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)']\n    }]\n  };\n\n  // Options for better presentation\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Arial, sans-serif',\n            weight: 'bold'\n          },\n          color: '#333'\n        }\n      },\n      title: {\n        display: true,\n        text: 'Sensor Data Monitoring',\n        font: {\n          size: 18,\n          family: 'Arial, sans-serif',\n          weight: 'bold'\n        },\n        color: '#333'\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleFont: {\n          size: 14\n        },\n        bodyFont: {\n          size: 12\n        },\n        footerFont: {\n          size: 10\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#555',\n          font: {\n            size: 12,\n            family: 'Arial, sans-serif'\n          }\n        },\n        grid: {\n          color: 'rgba(200, 200, 200, 0.2)'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#555',\n          font: {\n            size: 12,\n            family: 'Arial, sans-serif'\n          },\n          callback: function (value) {\n            return value + ' units';\n          }\n        },\n        grid: {\n          color: 'rgba(200, 200, 200, 0.2)'\n        }\n      }\n    },\n    animation: {\n      duration: 1500,\n      easing: 'easeOutBounce'\n    }\n  };\n  useEffect(() => {\n    const canvas = chartRef.current;\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    chartInstance.current = new Chart(canvas, {\n      type: 'bar',\n      data: data,\n      options: options\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [temperatureData, humidityData, breachAlertData, fluidLevelData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: '20px auto',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n      padding: '20px',\n      borderRadius: '10px',\n      backgroundColor: '#f9f9f9'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Chart","CategoryScale","LinearScale","BarController","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","MyChart","temperatureData","humidityData","breachAlertData","fluidLevelData","_s","chartRef","chartInstance","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","hoverBackgroundColor","options","responsive","plugins","legend","position","font","size","family","weight","color","title","display","text","tooltip","titleFont","bodyFont","footerFont","scales","x","ticks","grid","y","callback","value","animation","duration","easing","canvas","current","destroy","type","style","width","margin","boxShadow","padding","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/MyChart.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  BarController,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChart.register(CategoryScale, LinearScale, BarController, BarElement, Title, Tooltip, Legend);\n\nconst MyChart = ({ temperatureData, humidityData, breachAlertData, fluidLevelData }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  // Data format to use in the chart\n  const data = {\n    labels: ['Temperature', 'Humidity', 'Breach Alert', 'Fluid Level'],\n    datasets: [\n      {\n        label: 'Sensor Data',\n        data: [temperatureData, humidityData, breachAlertData, fluidLevelData],\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 2,\n        borderRadius: 5,\n        hoverBackgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)'],\n      },\n    ],\n  };\n\n  // Options for better presentation\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Arial, sans-serif',\n            weight: 'bold',\n          },\n          color: '#333',\n        },\n      },\n      title: {\n        display: true,\n        text: 'Sensor Data Monitoring',\n        font: {\n          size: 18,\n          family: 'Arial, sans-serif',\n          weight: 'bold',\n        },\n        color: '#333',\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleFont: {\n          size: 14,\n        },\n        bodyFont: {\n          size: 12,\n        },\n        footerFont: {\n          size: 10,\n        },\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#555',\n          font: {\n            size: 12,\n            family: 'Arial, sans-serif',\n          },\n        },\n        grid: {\n          color: 'rgba(200, 200, 200, 0.2)',\n        },\n      },\n      y: {\n        ticks: {\n          color: '#555',\n          font: {\n            size: 12,\n            family: 'Arial, sans-serif',\n          },\n          callback: function (value) {\n            return value + ' units';\n          },\n        },\n        grid: {\n          color: 'rgba(200, 200, 200, 0.2)',\n        },\n      },\n    },\n    animation: {\n      duration: 1500,\n      easing: 'easeOutBounce',\n    },\n  };\n\n  useEffect(() => {\n    const canvas = chartRef.current;\n\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    chartInstance.current = new Chart(canvas, {\n      type: 'bar',\n      data: data,\n      options: options,\n    });\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [temperatureData, humidityData, breachAlertData, fluidLevelData]);\n\n  return (\n    <div style={{ width: '80%', margin: '20px auto', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', padding: '20px', borderRadius: '10px', backgroundColor: '#f9f9f9' }}>\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default MyChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
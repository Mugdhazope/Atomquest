{"ast":null,"code":"var _jsxFileName = \"/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/Components/FluidLevelChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Chart, DoughnutController, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(DoughnutController, ArcElement, Title, Tooltip, Legend);\nconst FluidLevelChart = ({\n  fluidLevelData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  const data = {\n    labels: ['Fluid Level'],\n    datasets: [{\n      label: 'Fluid Level (%)',\n      data: [fluidLevelData, 100 - fluidLevelData],\n      backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(230, 230, 230, 0.7)'],\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Fluid Level Monitoring'\n      }\n    }\n  };\n  useEffect(() => {\n    const canvas = chartRef.current;\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    chartInstance.current = new Chart(canvas, {\n      type: 'doughnut',\n      data: data,\n      options: options\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [fluidLevelData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(FluidLevelChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = FluidLevelChart;\nexport default FluidLevelChart;\nvar _c;\n$RefreshReg$(_c, \"FluidLevelChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","DoughnutController","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","FluidLevelChart","fluidLevelData","_s","chartRef","chartInstance","data","labels","datasets","label","backgroundColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","canvas","current","destroy","type","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/Components/FluidLevelChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Chart, DoughnutController, ArcElement, Title, Tooltip, Legend } from 'chart.js';\n\nChart.register(DoughnutController, ArcElement, Title, Tooltip, Legend);\n\nconst FluidLevelChart = ({ fluidLevelData }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  const data = {\n    labels: ['Fluid Level'],\n    datasets: [\n      {\n        label: 'Fluid Level (%)',\n        data: [fluidLevelData, 100 - fluidLevelData],\n        backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(230, 230, 230, 0.7)'],\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Fluid Level Monitoring',\n      },\n    },\n  };\n\n  useEffect(() => {\n    const canvas = chartRef.current;\n\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    chartInstance.current = new Chart(canvas, {\n      type: 'doughnut',\n      data: data,\n      options: options,\n    });\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [fluidLevelData]);\n\n  return (\n    <div className=\"chart-card\">\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default FluidLevelChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzFP,KAAK,CAACQ,QAAQ,CAACP,kBAAkB,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEtE,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMe,aAAa,GAAGf,MAAM,CAAC,IAAI,CAAC;EAElC,MAAMgB,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,aAAa,CAAC;IACvBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBH,IAAI,EAAE,CAACJ,cAAc,EAAE,GAAG,GAAGA,cAAc,CAAC;MAC5CQ,eAAe,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,CAAC;MACxEC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,MAAM6B,MAAM,GAAGhB,QAAQ,CAACiB,OAAO;IAE/B,IAAIhB,aAAa,CAACgB,OAAO,EAAE;MACzBhB,aAAa,CAACgB,OAAO,CAACC,OAAO,CAAC,CAAC;IACjC;IAEAjB,aAAa,CAACgB,OAAO,GAAG,IAAI7B,KAAK,CAAC4B,MAAM,EAAE;MACxCG,IAAI,EAAE,UAAU;MAChBjB,IAAI,EAAEA,IAAI;MACVM,OAAO,EAAEA;IACX,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIP,aAAa,CAACgB,OAAO,EAAE;QACzBhB,aAAa,CAACgB,OAAO,CAACC,OAAO,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzB1B,OAAA;MAAQ2B,GAAG,EAAEtB;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtDIF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAwDrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TemperatureChart from './Components/TemperatureChart';\nimport HumidityChart from './Components/HumidityChart';\nimport BreachAlertChart from './Components/BreachAlertChart';\nimport FluidLevelChart from './Components/FluidLevelChart';\nimport Charts from './M';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    temperature: 0,\n    humidity: 0,\n    breachAlert: 0,\n    fluidLevel: 0\n  });\n  useEffect(() => {\n    // Replace this with actual data fetching or simulated data\n    setSensorData({\n      temperature: 25,\n      humidity: 60,\n      breachAlert: 0,\n      fluidLevel: 75\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sensor Data Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(TemperatureChart, {\n        temperatureData: sensorData.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HumidityChart, {\n        humidityData: sensorData.humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreachAlertChart, {\n        breachAlertData: sensorData.breachAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FluidLevelChart, {\n        fluidLevelData: sensorData.fluidLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Q/ioMcwgFGSsxeINgZtH3z7dcj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TemperatureChart","HumidityChart","BreachAlertChart","FluidLevelChart","Charts","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","temperature","humidity","breachAlert","fluidLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","temperatureData","humidityData","breachAlertData","fluidLevelData","_c","$RefreshReg$"],"sources":["/Users/mugdhazope/projects/Atomquest/smart-fluid-container/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TemperatureChart from './Components/TemperatureChart';\nimport HumidityChart from './Components/HumidityChart';\nimport BreachAlertChart from './Components/BreachAlertChart';\nimport FluidLevelChart from './Components/FluidLevelChart';\nimport Charts from './M'\n\nconst App = () => {\n  const [sensorData, setSensorData] = useState({\n    temperature: 0,\n    humidity: 0,\n    breachAlert: 0,\n    fluidLevel: 0,\n  });\n\n  useEffect(() => {\n    // Replace this with actual data fetching or simulated data\n    setSensorData({\n      temperature: 25,\n      humidity: 60,\n      breachAlert: 0,\n      fluidLevel: 75,\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Sensor Data Dashboard</h1>\n      <div className=\"chart-container\">\n        <TemperatureChart temperatureData={sensorData.temperature} />\n        <HumidityChart humidityData={sensorData.humidity} />\n        <BreachAlertChart breachAlertData={sensorData.breachAlert} />\n        <FluidLevelChart fluidLevelData={sensorData.fluidLevel} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAC3Ca,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CAAC;IACXC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd;IACAW,aAAa,CAAC;MACZC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Bb,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9BT,OAAA,CAACN,gBAAgB;QAACqB,eAAe,EAAEZ,UAAU,CAACE;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7Db,OAAA,CAACL,aAAa;QAACqB,YAAY,EAAEb,UAAU,CAACG;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDb,OAAA,CAACJ,gBAAgB;QAACqB,eAAe,EAAEd,UAAU,CAACI;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7Db,OAAA,CAACH,eAAe;QAACqB,cAAc,EAAEf,UAAU,CAACK;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CA7BID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}